html,
body {
  overscroll-behavior-x: none;
}

body {
  margin: 0;
  padding: 0;
  width: 100vw;
  height: 0;
  position: absolute;
}

* {
  font-family: "Inter", sans-serif;
  color: #9d9d9d;
  font-size: 16px;
}


#blur-filter,
#invert-filter {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  pointer-events: none;
}

#blur-filter {
  backdrop-filter: blur(0px);
  z-index: 0;
  /* Lower z-index */
}

#invert-filter {
  backdrop-filter: invert(0%) hue-rotate(0deg);
  z-index: 2000;
  /* Higher z-index to be on top */
}


.edge-arrow {
  fill: rgba(51, 51, 51, 0.9);
  /* Semi-transparent fill color */
}

.edge-arrow-hover {
  /* fill: rgba(51, 51, 51, 0.5);  Semi-transparent fill color */
  fill: rgb(127 186 223 / 80%);
  /* Slightly more opaque fill for hover */
}

.edge-border {
  fill: rgb(127 186 223 / 80%);
}

.edge-border-hover {
  /* Styles for hovered state of the border */
  fill: rgb(127 186 223 / 80%);
}


.hidden {
  display: none;
  overflow: hidden;
}

.collapsed-circle {
  display: relative;
  cursor: pointer;
  transition: background-color 0.3s ease;
  width: 60px;
  height: 60px;
  background-color: rgb(50 51 62 / 50%);
  backdrop-filter: blur(3px);
  transform: translateY(-3px);
  /* Adjust the value as needed */
}

.collapsed-anchor:hover {
  background-color: #555;
  /* Change to desired hover color */
}


.collapsed-circle.collapsed-anchor {
  background-color: rgba(107, 98, 121, 40%) !important;
  border: none;
}

.window.selected.collapsed::before {
  border-radius: 50%;
}

/* To hide the background color of the window when collapsed */
.window.collapsed {
  background-color: transparent;
  border-color: transparent;
}


.window {
  display: flex;
  flex-direction: column;
  align-items: baseline;
  border: none;
  background-color: rgb(50 51 62 / 70%);
  -webkit-box-shadow: 0px 0px 6.5px rgba(0, 0, 0, 0.3);
  -moz-box-shadow: 0px 0px 6.5px rgba(0, 0, 0, 0.3);
  box-shadow: 0px 0px 6.5px rgba(0, 0, 0, 0.3);
  user-select: none;
  position: relative;
  /* Set initial width and height */
  width: fit-content;
  max-width: fit-content;
  height: fit-content;
  border: 1px solid rgba(0, 0, 0, 0);
  z-index: 2;
  transition: border 0.3s ease-in-out;
}

.window-anchored {
  background-color: #1a1921bf;
}

.window-anchored::before {
  content: "";
  display: block;
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border: 2px solid #1a1a1a;
  pointer-events: none;
  z-index: 1;
}

.window-anchored.selected {
  background-color: #4a669d;
}

.drag-box {
  position: absolute;
  border: 1px dashed rgba(255, 255, 255, 0.8);
  /* Adjusted border width and color */
  background: rgb(255 255 255 / 5%);
  /* White background with transparency */
  backdrop-filter: blur(1px);
  pointer-events: none;
  z-index: 0;
}

.selected {
  background-color: #6c7687;
  color: #222226;
}


.window.selected::before {
  content: "";
  display: block;
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border: 2px solid #007BFF;
  pointer-events: none;
  z-index: 1;
}

.node-textarea {
  background-color: #222226;
  color: #bbb;
  overflow-y: scroll;
  resize: both;
  width: 259px;
  line-height: 1.4;
  display: none;
  /* Initially hidden */
  position: absolute;
}

.html-iframe {
  border: none;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  min-width: 50px;
  min-height: 40px;
  display: block;
  z-index: 1000;
}

.python-frame {
  display: block;
  z-index: 1000;
}

/* Increased specificity for hidden class */
.html-iframe.hidden,
.python-frame.hidden {
  display: none;
}

.textarea-override {
  border: none;
  outline: none;
  resize: none;
  background-color: transparent;
  width: 100%;
  height: 100%;
  box-shadow: none;
  -webkit-appearance: none;
}

.editor-wrapper {
  font-family: monospace;
  border: none;
  border-bottom: 1px solid #8882;
  width: 280px;
  height: 100%;
  min-height: 180px;
  max-height: 320px;
  overflow: hidden;
  padding: 15px 0px 1px 22px;
  margin: 0px;
  box-sizing: border-box;
  background-color: #222229;
  border-radius: 0;
  position: relative;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
}

.editable-div,
.syntax-display-div {
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  overflow-y: scroll;
  scroll-behavior: auto;
  white-space: pre-wrap;
  word-wrap: break-word;
  line-height: 1.6em;
  box-sizing: border-box;
  padding: 0;
  grid-column: 1;
  grid-row: 1;
  font-size: 18px;
  letter-spacing: 0.6px;
}

.editable-div {
  z-index: 0;
  background: transparent;
  color: #2b2847;
  caret-color: #bbb;
}

.syntax-display-div {
  z-index: 1;
  background: transparent;
  pointer-events: none;
}

.syntax-display-div span {
  display: inline;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  white-space: inherit;
  word-wrap: inherit;
  overflow-wrap: inherit;
  line-height: inherit;
  font-family: inherit;
  box-sizing: inherit;
}

.node-title-sd {
  pointer-events: auto;
  color: paleturquoise !important;
  cursor: pointer;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.editable-div *,
.syntax-display-div * {
  color: inherit;
}

/* Transparent text highlight color */
.editable-div::selection {
  background-color: rgba(0, 0, 255, 0.2);
  color: transparent;
}

.neurite-code-block {}



.no-select {
  user-select: none;
  -webkit-user-select: none;
  /* Safari */
  -moz-user-select: none;
  /* Firefox */
  -ms-user-select: none;
  /* IE10+ and Edge */
}

.header-container {
  display: flex;
  justify-content: flex-end;
  /* Align items to the end (right) of the container */
  width: 100%;
  /* Make sure this takes up the full width of the parent container */
  margin-bottom: 2px;
  z-index: 1;
}

.windowbutton {
  cursor: pointer;
}

input[type="text" i].title-input {
  flex-grow: 1;
  flex-shrink: 1;
  color: #bbb;
  background: none !important;
  border-style: solid;
  border-width: 2px 5px 0px 0;
  border-color: #aaa;
  margin-top: 2px;
  margin-right: 2px;
  margin-left: -7px;
  z-index: 150;
}

input[type="text" i].title-input:focus {
  border-color: RGB(200, 200, 255);
  color: lightgrey;
  /* Change the border color when the input is focused */
  outline: none;
  /* Remove the default outline */
}

.hide-except-title>*:not(.title-input) {
  display: none;
}

.collapsed-title {
  background: transparent;
  border: none;
  pointer-events: none;
  /* Makes it un-clickable */
  text-align: center;
  /* Centers the text */
}



.container-for-textarea-and-pre {
  position: relative;
}

.code-highlight {
  white-space: pre-wrap;
  /* Respect newlines */
  word-wrap: break-word;
  /* Respect word wrap */
  overflow: hidden;
  /* Hide overflow */
}

.pre-with-cursor::after {
  content: '';
  position: absolute;
  width: 1px;
  height: 1em;
  background-color: black;
  /* or any color you want for the cursor */
  pointer-events: none;
}


.resize-container {
  position: absolute;
  flex-grow: 1;
  bottom: 0;
  right: 0;
  width: 15px;
  height: 15px;
  pointer-events: auto;
  user-select: none;
  display: flex;
  justify-content: space-between;
  align-items: center;
  pointer-events: none;
  /* Add this line */
}

.resize-handle {
  position: absolute;
  width: 15px;
  height: 15px;
  bottom: -8px;
  /* Adjust this value */
  right: -8px;
  cursor: nwse-resize;
  z-index: 4;
  pointer-events: auto;
  /* Add this line */
}

iframe {
  width: 100%;
  height: 100%;
  background-color: white;
}

.content {
  width: fit-content;
  height: fit-content;
  box-sizing: border-box;
  /* Add this line */
}

.resize-handle::before {
  content: "";
  position: absolute;
  width: 2px;
  height: 10px;
  background-color: #bbb;
  transform-origin: 0 0;
}

.resize-handle::after {
  content: "";
  position: absolute;
  width: 2.8px;
  height: 5px;
  background-color: #bbb;
  transform-origin: 0 0;
}

.resize-handle::before {
  transform: rotate(45deg) translate(-1px, -4px) scale(.9);
}

.resize-handle::after {
  transform: rotate(45deg) translate(3px, -1px) scale(.5);
}

.resize-handle.dragging {
  background-color: none;
}

.selectable {
  user-select: auto;
}

#elements svg g {
  z-index: 1000;
  display: inline-block;
}

.disable-pointer-events {
  pointer-events: none;
}

/*Custom Modal Styles*/
.modal {
  display: none;
  position: fixed;
  z-index: 900;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  /*background-color: rgba(0, 0, 0, 0.4);*/
  justify-content: center;
  align-items: center;
  pointer-events: none;
}

.modal-content {
  display: flex;
  flex-direction: column;
  background-color: #1a1921bf;
  backdrop-filter: blur(5px);
  border: 2px solid #333;
  width: fit-content;
  max-width: 90vw;
  max-height: 90vh;
  box-sizing: border-box;
  overflow: visible;
  border-radius: 5px 5px 0px 0px;
  pointer-events: auto;
  position: relative;
  /* Change to relative positioning */
  cursor: move;
  /* Add cursor style to indicate draggable */
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-inline: 20px;
  background-color: #222226;
  box-shadow: 0px 0px 30px 10px rgba(21, 21, 27, 0.44);
  user-select: none;
}

.modal-title {
  margin: 0;
  font-size: 20px;
}

.close {
  color: #bbb;
  font-size: 32px;
  font-weight: 100;
  cursor: pointer;
}

.close:hover,
.close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}

.modal-body {
  padding: 20px;
}

.api-modal-content {
  width: 200px;
  /* Set a fixed width for the modal */
}

.api-modal-input {
  width: 100%;
  /* Full width minus padding */
  padding: 10px;
  margin-bottom: 20px;
}

.api-modal-button {
  width: 100%;
  padding: 10px;
  background-color: #222226;
  color: white;
  border: inset #8882;
  cursor: pointer;
}

.api-modal-button:hover {
  background-color: #293e34;
}


.importLinkTextarea {
  background-color: #222226;
  height: 250px;
  width: 500px;
}

#nodeList {
  list-style-type: none;
  padding: 0;
  width: 250px;
  height: 30vh;
  overflow-y: auto;
  overflow-x: hidden;
}

#nodeList li {
  cursor: pointer;
  padding: 8px 12px;
  border-bottom: 1px solid #bbb;
  white-space: nowrap;
  /* Prevent text from wrapping */
  overflow: hidden;
  /* Hide any overflow */
  text-overflow: ellipsis;
  /* Show ellipsis (...) for overflowed text */
}

#nodeList li.connected {
  background-color: #293e34;
  /* Light green background for connected nodes */
}

#nodeList li.disconnected {
  /* You can add specific styles for disconnected nodes if needed */
}

#nodeList li:hover {
  background-color: #555;
  color: white;
}

#nodeList li.connected:hover {
  background-color: #54876f;
  /* Light green background for connected nodes */
}

#nodeList li:active {
  background-color: #e0e0e0;
}

#ollamaModelList {
  list-style-type: none;
  padding: 0;
  overflow-y: scroll;
  overflow-x: hidden;
  max-height: 50vh;
  min-width: 200px;
}

#ollamaModelList .model-item {
  cursor: pointer;
  padding: 8px 12px;
  border-bottom: 1px solid #bbb;
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

#ollamaModelList .connected {
  background-color: #293e34;
  /* Light green background for connected nodes */
}

#ollamaModelList .disconnected {
  background-color: none;
  /* Different background for disconnected nodes */
}

#ollamaModelList .model-item:hover {
  background-color: #555;
  color: white;
}

#ollamaModelList .connected:hover {
  background-color: #54876f;
  /* Light green background for connected nodes */
}

#ollamaModelList .model-item:active {
  background-color: #e0e0e0;
}

#ollamaModelList .progress-bar {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 0;
  background-color: #4caf50;
  z-index: -1;
  transition: width 0.5s ease;
}

.model-name {
  flex-grow: 1;
  text-align: left;
}

/* Dropdown menu styles */
.dropdown {
  position: absolute;
  top: 20px;
  right: 20px;
}

.menu-button {
  position: relative;
  width: 40px;
  height: 40px;
  cursor: pointer;
  z-index: 2;
}

.menu-icon {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 20px;
  height: 2px;
  background-color: #bbb;
  transition: all 0.3s ease-in-out;
  z-index: 10;
  /* higher than dropdown-content */
}

.menu-icon::before,
.menu-icon::after {
  content: "";
  position: absolute;
  width: 20px;
  height: 2px;
  background-color: #bbb;
  transition: all 0.3s ease-in-out;
}

.menu-icon::before {
  top: -6px;
}

.menu-icon::after {
  bottom: -6px;
}

.menu-button.open .menu-icon {
  background-color: transparent;
}

.menu-button.open .menu-icon::before {
  transform: translateY(6px) rotate(45deg);
}

.menu-button.open .menu-icon::after {
  transform: translateY(-6px) rotate(-45deg);
}

.dropdown-content {
  position: absolute;
  top: 100%;
  right: 0;
  background: #1a1921bf;
  backdrop-filter: blur(6px);
  border-top-right-radius: 8px;
  border-bottom-left-radius: 8px;
  overflow: visible;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: 1fr;
  grid-column-gap: 0px;
  grid-row-gap: 0px;
  /*-webkit-box-shadow: 0px 0px 30px 10px rgba(21, 21, 27, 0.44);
    -moz-box-shadow: 0px 0px 30px 10px rgba(21, 21, 27, 0.44);
    box-shadow: 0px 0px 30px 10px rgba(21, 21, 27, 0.44);*/
  z-index: 1;
  margin-top: -38px;
  margin-right: -5px;
  transform: translateY(-200%);
  /* Start off screen */
  transition: transform 0.3s ease;
  /* Transition for sliding effect */
}

.dropdown-content.open {
  transform: translateY(0%);
  /* Slide in to view */
}

.submenu {
  padding: 10px;
  color: #bbb;
}

.submenu a {
  display: block;
  color: #bbb;
  text-decoration: none;
  padding: 5px;
}

.submenu a.selected:before {
  content: "\2713";
  color: #bbb;
  margin-right: 5px;
}

.submenu a:hover {
  background-color: #ddd;
  color: #222226;
}

input[type="range"] {
  display: block;
  margin: 0 auto;
  width: 200px;
}

input[type="text" i] {
  padding: 1px 2px;
  background-color: #222226;
  /* Dark background */
  color: #bbb;
  /* Light text color for contrast */
  font-size: 16px;
  /* Standard readable font size */
  width: 100%;
  /* Full-width to fit container */
  box-sizing: border-box;
  /* Include padding in width calculation */
  outline: none;
  /* Remove default focus outline */
  /* Set specific borders */
  border-style: solid;
  border-width: 0 2px 2px 0;
  /* Only bottom and right borders */
  border-color: transparent #747474 #747474 transparent;
  /* Transparent top and left borders */
  transition: border-color 0.3s;
  /* Smooth transition for the border color */
}


/* Minimal change on hover for interactivity */
input[type="text" i]:hover {
  background-color: #1e1e22;
  /* Slightly lighter background on hover */
}

}

.submenu-btn {
  display: flex;
  align-content: flex-start;
  border: none;
  background-color: transparent;
  color: #bbb;
  cursor: pointer;
  padding: 5px;
  font-size: medium;
}

.gradient-selector {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.gradient-preview {
  width: 250px;
  height: 100px;
  margin-top: 5px;
}

.color-inputs {
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: center;
  margin-top: 10px;
}

.color-input {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 5px;
}

.color-picker {
  width: 50px;
  height: 50px;
  background-color: #8882;
  color: #bbb
}

.delete-btn {
  margin-top: 5px;
  background-color: #8882;
  color: #bbb
}

.add-btn {
  margin-top: 10px;
  background-color: #8882;
  display: flex;
  justify-content: center !important;
  width: auto;
  color: #bbb;
}

.search-container {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.Searchbar {
  flex: 1;
  background-color: #222226;
  color: #bbb;
  width: 100%;
  border: inset;
  border-color: #8882;
}

.Searchbar:focus {
  outline: none;
  /* Removes the default outline */
  border: inset;
  /* Keeps the same border style */
  border-color: #8882;
  /* Keeps the same border color */
}

.search-button .icon {
  width: 17px;
  /* Adjust the size as needed */
  height: 17px;
  /* Adjust the size as needed */
}

#search-results {
  display: flex;
  width: 250px;
  height: 30vh;
  overflow-y: auto;
  overflow-x: hidden;
}

.results-display-div {
  width: 100%;
}

.search-result-item {
  display: block;
  padding: 10px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  text-decoration: none;
  color: #fff;
  width: 100%;
}

.search-result-item:hover {
  background-color: #333;
}

.search-result-item:active {
  background-color: #444;
}

.search-result-title {
  word-wrap: break-word;
  white-space: pre-wrap;
}

.custom-scrollbar {
  scrollbar-width: thin;
  scrollbar-color: #888 #444;
}

.custom-scrollbar::-webkit-scrollbar {
  width: 8px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  background-color: #444;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: #888;
}

.search_matched {
  outline-style: double;
  outline-color: #54876f;
  outline-width: 10px;
}

.search_nomatch {
  outline-style: hidden;
  outline-color: blue;
  outline-width: 0px;
}

.vector-db-search-results {
  width: 350px;
  height: 370px;
  overflow-y: auto;
  overflow-x: hidden;
  border: none;
  margin-top: 12px;
  margin-bottom: 12px;
  display: flex;
  align-items: center;
  flex-direction: column;
}

.vdb-search-result {
  background-color: #222226;
  border-radius: 10px;
  border: inset #8882;
  padding: 15px;
  margin-bottom: 10px;
  box-shadow: 5px 3px 10px 0px rgb(0 0 0 / 33%);
  cursor: text;
}

.vdb-result-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 10px;
}

.vdb-result-source {
  font-weight: bold;
  font-size: 16px;
  color: #ddd;
  word-wrap: break-word;
  word-break: break-word;
  max-width: 69%;
}

.vdb-result-score {
  font-size: 14px;
  color: #888;
  white-space: nowrap;
}

.vdb-result-text {
  font-size: 14px;
  line-height: 1.5;
  max-height: 300px;
  overflow-y: auto;
}

.vdb-result-text::before,
.vdb-result-text::after {
  content: '...';
}

#key-list {
  max-width: 265px;
  min-width: 265px;
  height: 300px;
  overflow-y: auto;
}

#key-list p {
  display: flex;
  align-items: center;
  padding: 8px 10px;
  cursor: pointer;
}

#key-list p:hover {
  background-color: #5b5b6d;
}

#key-list p:hover span {
  color: #8ac6f2;
}

#key-list p.selected,
#key-list p.selected:hover {
  background-color: #9a4a4a;
}

#key-list p.selected span,
#key-list p.selected:hover span {
  color: #222226;
}

#key-list p span {
  flex-grow: 1;
  margin-right: 10px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.eyeball-icon {
  flex-shrink: 0;
  width: 25px;
  height: 25px;
}





#delete-vectordb-docs:hover {
  background-color: #9a4a4a;
  color: #222226;
}

#chunkAndStoreButton:hover {
  background-color: #293e34;
}

#cancelChunkAndStoreButton:hover {
  background-color: #5c2929;
}

.vdb-loading-item {
  display: flex;
  align-items: center;
  width: 100%;
  position: relative;
  padding: 4px;
  margin-bottom: 5px;
  margin-top: 5px;
}

.vdb-progress-bar-inner {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 0;
  background-color: #5b5b6d;
  transition: width 0.3s ease-in-out;
  z-index: 1;
}

.vdb-loading-content {
  display: flex;
  align-items: center;
  width: 100%;
  z-index: 2;
  position: relative;
}

.vdb-loader-text {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #8ac6f2;
  flex-grow: 1;
}



.tooltip-highlight {
  background-color: #5b5b6d;
  color: #8ac6f2;
}

.snippet-ref {
  background-color: #5b5b6d;
  border-radius: 10px;
  padding-inline: 6px;
  padding-top: 2px;
  padding-bottom: 4px;
}

.mention {
  background-color: #5b5b6d;
  color: #8ac6f2;
  border-radius: 10px;
  padding-inline: 6px;
  padding-top: 2px;
  padding-bottom: 4px;
}


textarea#rawTextArea {
  background-color: #222226;
  width: 300px;
  height: 300px;
  resize: none;
  border-top: 2px solid #727272;
  border-bottom: none;
  border-inline: none;
}

textarea#rawTextArea:focus {
  outline: none;
  /* Removes the default outline */
  border-top: 2px solid #727272;
}

#chunkedTextDisplay {
  height: 300px;
  width: 300px;
}




.textnode {
  background-color: #222226;
}

#prompt-form {
  display: flex;
  align-items: center;
  gap: 5px;
}

textarea#prompt {
  overflow-y: hidden;
  flex-grow: 1;
  background-color: #222226;
  color: #bbb;
  border: inset;
  border-color: #8882;
  width: 100%;
  padding: 10px;
  box-sizing: border-box;
  resize: none;
}

textarea#prompt:focus {
  outline: none;
  /* Removes the default outline */
  border: inset;
  /* Keeps the same border style */
  border-color: #8882;
  /* Keeps the same border color */
}

#prompt-form button {
  z-index: 1;
  padding: 4px 4px;
  font-size: 14px;
  cursor: pointer;
  background-color: #222226;
  transition: background-color 0.3s;
  border: inset;
  border-color: #8882;
}

#prompt-form button:hover {
  background-color: #333;
  color: #222226
}

#prompt-form button[type="submit"] {
  background-color: #222226;
  color: white;
}

#prompt-form button[type="submit"]:hover {
  background-color: #293e34;
  color: #222226;
}

#api-key-input {
  background-color: #222226;
  border: inset;
  border-color: #8882;
}

.api-panel {
  display: flex;
  overflow: hidden;
  transition: height 0.2s ease;
  height: 0;
  /* Start with 0 height for the initial state if hidden */
}

.api-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  overflow: hidden;
}

.api-inputs {
  flex-grow: 1;
}

.api-buttons {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-end;
  margin-left: 0px;
}

/* Initially hidden elements */
.intentionally-hidden {
  display: none;
  /* No !important required */
}

.hidden-visibility {
  opacity: 0;
  position: absolute;
  width: 0;
  height: 0;
  overflow: hidden;
  pointer-events: none;
}

.linkbuttons {
  padding: 4px 6px;
  font-size: 14px;
  cursor: pointer;
  background-color: #222226;
  transition: background-color 0.3s;
  border: inset;
  border-color: #8882;
  height: 100%;
}

.linkbuttons:hover {
  background-color: #ddd;
}

.linkbuttons[type="submit"] {
  background-color: #222226;
  color: #bbb;
}

.linkbuttons[type="submit"]:hover {
  background-color: #45a049;
}

.deletebuttons {
  right: 15px;
  padding: 0;
  position: absolute;
  font-size: 24px;
  cursor: pointer;
  background-color: transparent;
  transition: background-color 0.3s;
  border: none;
}

.deletebuttons:hover {
  color: black;
}

#saved-networks-container .linkbuttons {
  margin: 0;
}

.coordinate-field {
  display: flex;
  align-items: center;
  /* Aligns items vertically in the center */
  justify-content: flex-start;
  /* Aligns items to the start of the flex container */
  background-color: #222226;
  padding-left: 8px;
  padding-right: 8px;
  border-radius: 4px;
  margin-bottom: 3px;
}

.coordinate-field span {
  margin-right: 10px;
  /* Adds space between the label and the input field */
}

.divider {
  display: flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;
}

.divider span {
  border-bottom: 1px solid #000;
  flex-grow: 1;
  margin-right: 10px;
}

.divider button {
  background: none;
  border: none;
  font-size: 20px;
  line-height: 1;
}

/* Hide the checkbox visually but remain accessible */
input[type="checkbox"] {
  display: none;
}

input[type="checkbox"]+label {
  padding: 19px;
  position: relative;
  display: inline-block;
  vertical-align: middle;
  /* Helps with vertical alignment */
  cursor: pointer;
  /* Add other styles as needed */
}

input[type="checkbox"]+label:before {
  content: '';
  position: absolute;
  left: 0;
  top: 50%;
  /* Adjust this to better align vertically */
  transform: translateY(-50%);
  /* Centers the checkbox relative to the label's height */
  width: 14px;
  height: 14px;
  background-color: transparent;
  /* Make the checkbox background transparent */
  display: inline-block;
}

input[type="checkbox"]:checked+label:after {
  content: '✔';
  position: absolute;
  top: 1px;
  left: 87%;
  /* Adjust if necessary for better centering */
  transform: translate(0, -50%);
  /* Adjust for precise vertical centering */
  font-size: 18px;
  color: #bbb;
  /* Change the checkmark color to white */
}

/* General label styling */
input[type="checkbox"]+label {
  user-select: none;
  cursor: pointer;
  /* Indicates clickable */
  position: relative;
  /* For absolute positioning of :before and :after */
}

/* Styling applies to all checkboxes and labels */
input[type="checkbox"]+label {
  display: inline-block;
  padding: 3px 11px;
  min-width: 50px;
  /* Ensure consistent width */
  color: #888;
  background-color: #222226;
  border-radius: 0 10px 0px 10px;
  border-top: 2px solid #555;
  /* Border on the left */
  border-right: 3px solid #555;
  /* Border on the bottom */
  border-left: 3px solid #8882;
  /* Border on the left */
  border-bottom: 2px solid #8882;
  /* Border on the bottom */
  margin: 3px 4px;
  font-size: 14px;
  text-align: center;
  vertical-align: middle;
  transition: background-color 0.3s, color 0.1s;
}

/* Change label style when associated checkbox is checked */
input[type="checkbox"]:checked+label {
  background-color: rgb(30, 55, 81);
  border-left: 3px solid #888;
  /* Border on the left */
  border-bottom: 2px solid #888;
  /* Border on the bottom */
  color: #bbb;
}

/* Hover effects for labels */
input[type="checkbox"]+label:hover {
  background-color: #333;
  /* Hover BG color */
  color: #bbb;
  /* Hover text color */
}

/* Hover effects for checked labels */
input[type="checkbox"]:checked+label:hover {
  background-color: rgb(30, 55, 81);
  /* Hover BG color for checked state */
  color: #bbb;
  /* Hover text color for checked state */
}

.checkboxarray {
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-wrap: wrap;
  justify-content: space-between;
  width: 270px;
  padding-top: 6px;
  /* adjust this as needed */
}

.checkboxarray div {
  width: 33%;
  /* adjust this as needed */
}



.tabs {
  display: flex;
  justify-content: flex-start;
  padding-right: 47px;
}

.tabcontent {
  display: none;
  min-width: 290px;
}

.tablink {
  padding: 4px 6px;
  font-size: 14px;
  cursor: pointer;
  background-color: #222226;
  transition: background-color 0.3s;
  border: inset;
  border-color: #8882;
}

.tablink:hover {
  background-color: #ddd;
  color: #222226;
  /* Change text color on hover so it's visible against the lighter background */
}

.tablink.activeTab {
  background-color: #929292;
  /* Or the color you want for active tab */
  color: #222226;
  /* Or the color you want for the text of active tab */
}

.input-group {
  display: flex;
  align-items: start;
}

.btn-group button {
  width: 39px;
  /* Adjust as needed */
  height: 33px;
  /* Adjust as needed */
}

.btn-group {
  display: flex;
  align-items: start;
  gap: 5px;
  padding-left: 33px;
  padding-bottom: 10px;
  width: 30px;
  height: 20px;
}

.zet-drag-handle-horiz {
  width: 6px;
  /* Increase the width */
  height: 100%;
  cursor: ew-resize;
  background-color: transparent;
  /* Make it transparent */
  position: absolute;
  left: 0;
  z-index: 1;
}

.zet-drag-handle-vert {
  width: 100%;
  height: 6px;
  /* Increase the height */
  cursor: ns-resize;
  background-color: transparent;
  /* Make it transparent */
  position: absolute;
  bottom: 0;
  z-index: 1;
}

.zet-pane-container {
  display: flex;
  flex-direction: column;
  border: none;
  resize: none;
  overflow: auto;
  min-width: 270px;
  height: 60vh;
  width: 270px;
}

.zet-pane-header {
  display: flex;
  align-items: center;
  justify-content: center;
  padding-bottom: 10px;
}

.zet-pane-close {
  position: absolute;
  top: 5px;
  right: 5px;
  cursor: pointer;
}

.zet-pane-content {
  flex: 1;
  overflow: hidden;
  display: flex;
  grid-template-columns: repeat(3, 1fr);
  width: 100%;
}

.zet-pane {
  display: none;
  height: 100%;
  width: 100%
}

.zet-pane.active {
  display: block;
}

.zet-add-pane-button {}

.zettelkasten::-webkit-scrollbar {
  width: 10px;
}

.zettelkasten::-webkit-scrollbar-thumb {
  background: #888;
}

.zettelkasten::-webkit-scrollbar-thumb:hover {
  background: #555;
}

.zettelkasten::-webkit-scrollbar-corner {
  background: transparent;
  border: none;
}

.howto {
  width: auto;
}

table {
  border-collapse: collapse;
  background-color: #222226;
}

th,
td {
  padding: 15px;
  text-align: center;
  border: 1px solid #5d5d5d;
}

.select-container {
  position: relative;
  display: inline-block;
  width: 130px;
  /* Width of the select-replacer */
  z-index: 20;
}

.select-replacer {
  position: relative;
  border: inset #8882;
  cursor: pointer;
  width: 100%;
  background-color: #222226;
  color: #fff;
  box-sizing: border-box;
  z-index: 10;
  user-select: none;
}

.select-replacer .selected-text {
  padding: 2px 10px;
  height: 25px;
  /* Consistent height */
  display: flex;
  align-items: center;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.select-replacer .selected-text::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  width: 46px;
  /* Match the padding-right value */
  background: linear-gradient(to left, #222226, transparent);
  pointer-events: none;
}

.select-replacer::before {
  content: "";
  position: absolute;
  right: 10px;
  top: 50%;
  width: 8px;
  height: 2px;
  background: #bbb;
  transform: translateY(-50%) rotate(-45deg);
  transition: transform 0.2s;
  z-index: 10;
}

.select-replacer::after {
  content: "";
  position: absolute;
  right: 15px;
  top: 50%;
  width: 8px;
  height: 2px;
  background: #bbb;
  transform: translateY(-50%) rotate(45deg);
  transition: transform 0.2s;
  z-index: 30;
}

.select-replacer:not(.closed)::before {
  transform: translateY(-50%) rotate(45deg);
}

.select-replacer:not(.closed)::after {
  transform: translateY(-50%) rotate(-45deg);
}

.options-replacer {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  border: 1px solid rgb(24, 24, 28);
  background-color: #f3f3f3;
  color: #ddd;
  width: 100%;
  z-index: 10;
  max-height: 300px;
  overflow-y: auto;
  overflow-x: hidden;
  box-sizing: border-box;
}

.options-replacer div {
  display: flex;
  white-space: normal;
  /* Allow text to wrap */
  padding: 5px 10px;
  word-break: break-word;
  /* Break long words */
  color: #555;
}

.options-replacer .dropdown-option:hover {
  background-color: #ddd;
}

.options-replacer div.selected {
  background-color: #a3d3eb;
}

.options-replacer .dropdown-option.selected:hover {
  background-color: #a3d3eb;
}

.options-replacer.show {
  display: block;
}

.option-content {
  width: 100%;
  padding: 0px 0px !important;
}

.option-input {
  flex-grow: 1;
  border: none;
  outline: none;
  background: transparent;
  font-size: 14px;
  padding: 5px 5px !important;
  border-radius: 9px;
}

.option-input:focus {
  background: #d2e6f6;
}

.minus-icon {
  width: 16px;
  height: 16px;
  margin-left: 8px;
  cursor: pointer;
  fill: none;
  stroke: #686868;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 1.5px;
}

.minus-icon:hover {
  stroke: #ff0000;
}

.dropdown-wrapper {
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.dropdown-wrapper label {
  white-space: nowrap;
  width: 110px;
}

.inference-template-wrapper {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

@-moz-document url-prefix() {
  .inference-template-wrapper {
    padding-top: 10px;
  }
}

.custom-scrollbar::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background: #888;
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background: #555;
}

.custom-scrollbar::-webkit-scrollbar-corner {
  background: transparent;
  border: none;
}

.custom-scrollbar {
  scrollbar-width: thin;
  scrollbar-color: #888 transparent;
}

.custom-scrollbar:hover {
  scrollbar-color: #555 transparent;
}

.custom-scrollbar::-webkit-scrollbar-button {
  color: transparent;
  background-color: transparent;
}

.key-button {
  z-index: 1;
  padding: 2px 2px;
  font-size: 14px;
  cursor: pointer;
  background-color: #222226;
  transition: background-color 0.3s;
  border: inset;
  border-color: #8882;
  margin-bottom: 4px;
}

.key-button:hover {
  background-color: #ddd;
  color: #222226;
}

.google-key-input input {
  background-color: #222226;
  border: inset;
  border-color: #8882;
}

.model-selector {
  border: 1px solid #222226;
  background-color: #222226;
  border: inset;
  border-color: #8882;
}

.model-input {
  background-color: #222226;
  border: inset;
  border-color: #8882;
}

#wolframApiKey {
  background-color: #222226;
  border: inset;
  border-color: #8882;
}

#howto {
  max-height: 500px;
  /* adjust this value as needed */
  width: 100%;
  overflow-y: auto;
}

#clickable-link {
  color: #0572eb;
  text-decoration: underline;
}

#clickable-link:hover {
  color: #0572eb;
  text-decoration: none;
}

#clickable-link:visited {
  color: #652fc5;
}

#svg_bg {
  width: 100%;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
}

.extract-textarea {
  background-color: #222226;
  width: 261px;
  z-index: -1;
  border: inset;
  border-color: #8882;
  resize: vertical;
  /* only allows the height to be resizable */
}

.extract-textarea::-webkit-scrollbar {
  width: 10px;
}

.extract-textarea::-webkit-scrollbar-thumb {
  background: #888;
}

.extract-textarea::-webkit-scrollbar-thumb:hover {
  background: #555;
}

.extract-textarea::-webkit-scrollbar-corner {
  background: transparent;
  border: none;
}


.extract-button {}

.scrollable-list {
  height: 190px;
  /* Adjust this value based on how tall you want your list to be */
  width: 95%;
  overflow-y: auto;
  overflow-x: hidden;
  padding: 5px;
  margin-top: 10px;
  border-top: 2px solid #727272;
}

.scrollable-list::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.scrollable-list::-webkit-scrollbar-thumb {
  background: #888;
}

.scrollable-list::-webkit-scrollbar-thumb:hover {
  background: #555;
}

.scrollable-list::-webkit-scrollbar-corner {
  background: transparent;
  border: none;
}

.inline-container {
  display: inline-block;
  vertical-align: middle;
  margin-right: 3px;
}

.flex-container {
  width: 90%;
  display: flex;
  align-items: center;
}

#LocalLLMselect {
  background-color: #222226;
  border: none;
}

#saved-networks-container div {
  margin: 5px 0;
  overflow-x: hidden;
}

#saved-networks-container button {
  margin-right: 10px;
}

.selected-save {
  background-color: #3b484d;
  transform: scale(1.05);
  /* Slightly enlarge the selected save */
  transition: transform 0.3s ease;
}



.top-section,
.bottom-section {
  display: flex;
  justify-content: flex-start;
}

.buttons-left,
.buttons-right {
  display: flex;
  flex-direction: column;
  /* Stack buttons vertically */
}

.buttons-right {
  display: flex;
  flex-direction: column;
  /* Stack buttons vertically */
  border-left: 2px solid #727272;
  background-color: #222226;
}

.top-section {
  display: flex;
  flex-direction: row;
  /* Align children in a row */
}

.buttons-left {
  display: flex;
  flex-direction: column;
  /* Stack buttons vertically */
  width: 100px;
  /* Fixed width */
  background-color: #222226;
  border-left: 2px solid #727272;
  border-bottom: 2px solid #727272;
  position: fixed;
}

.coordinates-container {
  background-color: #222226;
  /* Replace with your desired background color */
  border-top: 2px solid #727272;
  border-right: 2px solid #727272;
  border-left: none;
  border-bottom: none;
  /* Add if you want a border at the bottom as well */
  border-radius: 0px 15px 0 0;
  overflow: hidden;
  padding-top: 5px;
}


/* General styles for all containers */
.saved-coordinates-container {
  /* Allow elements to wrap */
  display: flex;
  flex-wrap: wrap;
}

#savedCoordinatesContainer {
  /* Specific styles for the main container */
  height: 140px;
  align-items: center;
  margin-top: 5px;
}

#savedCoordinatesContainerTop {
  /* Specific styles for the top container */
  align-items: center;
  height: 90px;
  justify-content: flex-end;
  margin-left: 100px;
  /* Same as the width of .buttons-left */
}

#savedCoordinatesContainerBottom {
  /* Specific styles for the bottom container */
  align-items: flex-start;
  height: 60px;
  width: 43%;
}

.saved-coordinate-item {
  /* Styling for each saved view element */
  background-color: #282828;
  margin-right: 6px;
  padding: 3px;
  border-radius: 5px;
  white-space: nowrap;
  font-size: 12px;
  cursor: pointer;
  transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease;
}

/* Hover state */
.saved-coordinate-item:hover {
  background-color: #555;
  color: #bbb;
  transform: scale(1.1);
}

/* Selected state - increased specificity */
.saved-coordinate-item.selected-coordinate {
  background-color: #333041;
  color: white;
  transform: scale(1);
  /* Return scale to normal for selected items */
}

.saved-coordinate-item {
  cursor: pointer;
  /* Change cursor to indicate clickability */
  transition: background-color 0.3s;
  /* Smooth transition for background color */
}



.highlight {
  border: 2px dashed #aaa;
}


/* The slider itself */
input[type=range] {
  -webkit-appearance: none;
  appearance: none;
  width: 100%;
  height: 6px;
  outline: none;
  opacity: 0.7;
  -webkit-transition: .2s;
  transition: opacity .2s;
  margin: 12px 0;
  background: linear-gradient(to right, #888 0%, #888 50%, #888 50%, #888 100%);
}

/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */
input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 10px;
  height: 20px;
  background: #bbb;
  cursor: pointer;
  border-radius: 4px;
  margin-top: -1px;
}

input[type=range]::-webkit-slider-thumb:hover {
  background: #aaa;
}

input[type=range]::-moz-range-thumb {
  width: 10px;
  height: 20px;
  background: #bbb;
  cursor: pointer;
  border-radius: 4px;
}

/* The slider progress (for Firefox) */
input[type=range]::-moz-range-progress {
  background: #888;
}

/* The slider track (for Firefox) */
input[type=range]::-moz-range-track {
  background: #888;
}

input[type=range]::-moz-range-thumb:hover {
  background: #aaa;
}


.CodeMirror-simplescroll-horizontal,
.CodeMirror-simplescroll-vertical {
  background-color: #222226 !important;
  width: 6px !important;
  display: none;
  /* Initially hidden */
}

.CodeMirror-simplescroll-scrollbar {
  background: #888 !important;
}

.CodeMirror-simplescroll-scrollbar:hover {
  background: #555 !important;
}

.CodeMirror-cursor {
  border-left: 2px solid #bbb !important;
}

.CodeMirror-selected {
  background: Highlight !important;
}

/* Invert the colors for focused text to ensure it has sufficient contrast */
.CodeMirror-focused .CodeMirror-selected {
  background: Highlight !important;
  color: HighlightText !important;
}

/* Gutter */
.CodeMirror-gutters {
  background: #282a36 !important;
  border-right: 0px !important;
}

.CodeMirror-gutter-wrapper {
  position: absolute;
  z-index: 1000;
  background: white !important;
  border: 1px solid #ccc !important;
}

.CodeMirror-linenumbers {
  color: black !important;
}

.CodeMirror-linenumbers div {
  color: black !important;
}

/* Syntax Highlighting - Mimics our Prism.js Tomorrow theme */

/* Define CSS variables for syntax highlighting colors */
:root {
  --cm-keyword-color: #cc99cc;
  --cm-builtin-color: #cc99cc;
  --cm-variable-color: #f8f8f2;
  --cm-def-color: #f08d49;
  --cm-operator-color: #66cccc;
  --cm-punctuation-color: #cccccc;
  --cm-number-color: #f08d49;
  --cm-string-color: #7ec699;
  --cm-comment-color: #999999;
  --cm-atom-color: #95cecc;
  --cm-type-color: #cc99cc;
  --cm-qualifier-color: #cc99cc;
  --cm-tag-color: #e2777a;
  --cm-attribute-color: #cc99cc;
  --cm-meta-color: #55b5db;
  --cm-property-color: #f8f8f2;
  --cm-header-color: #f8f8f2;
  --cm-quote-color: #f8f8f2;
  --cm-link-color: #f8f8f2;
  --cm-error-color: #f2777a;
  --cm-bracket-color: #f8f8f2;
}

/* General */
.CodeMirror {
  left: 0 !important;
  min-width: 266px;
  resize: none !important;
}

/* Background and Text */
.cm-s-default {
  color: var(--cm-text-color, #cccccc) !important;
}

/* Keywords */
.cm-s-default .cm-keyword {
  color: var(--cm-keyword-color) !important;
}

/* Built-ins */
.cm-s-default .cm-builtin {
  color: var(--cm-builtin-color) !important;
}

/* Variables */
.cm-s-default .cm-variable {
  color: var(--cm-variable-color) !important;
}

/* Variables 2 and 3 (often these are local and global variables) */
.cm-s-default .cm-variable-2 {
  color: var(--cm-variable-color) !important;
}

.cm-s-default .cm-variable-3 {
  color: var(--cm-variable-color) !important;
}

/* Function Definitions */
.cm-s-default .cm-def {
  color: var(--cm-def-color) !important;
}

/* Operators */
.cm-s-default .cm-operator {
  color: var(--cm-operator-color) !important;
}

/* Punctuation */
.cm-s-default .cm-punctuation {
  color: var(--cm-punctuation-color) !important;
}

/* Numbers */
.cm-s-default .cm-number {
  color: var(--cm-number-color) !important;
}

/* Strings */
.cm-s-default .cm-string,
.cm-s-default .cm-string-2 {
  color: var(--cm-string-color) !important;
}

/* Comments */
.cm-s-default .cm-comment {
  color: var(--cm-comment-color) !important;
}

/* Atoms */
.cm-s-default .cm-atom {
  color: var(--cm-atom-color) !important;
}

/* Types */
.cm-s-default .cm-type {
  color: var(--cm-type-color) !important;
}

/* Qualifiers */
.cm-s-default .cm-qualifier {
  color: var(--cm-qualifier-color) !important;
}

/* Tags */
.cm-s-default .cm-tag {
  color: var(--cm-tag-color) !important;
}

/* Attributes */
.cm-s-default .cm-attribute {
  color: var(--cm-attribute-color) !important;
}

/* Meta and Others */
.cm-s-default .cm-meta {
  color: var(--cm-meta-color) !important;
}

.cm-s-default .cm-property {
  color: var(--cm-property-color) !important;
}

.cm-s-default .cm-header {
  color: var(--cm-header-color) !important;
}

.cm-s-default .cm-quote {
  color: var(--cm-quote-color) !important;
}

.cm-s-default .cm-link {
  color: var(--cm-link-color) !important;
}

.cm-s-default .cm-error {
  color: var(--cm-error-color) !important;
}

.cm-s-default .cm-bracket {
  color: var(--cm-bracket-color) !important;
}

/* Custom Neurite Mappings from Codemirror Styles */

.neurite-meta {
  color: var(--cm-keyword-color);
}

.neurite-keyword {
  color: var(--cm-keyword-color);
}

.neurite-builtin {
  color: var(--cm-builtin-color);
}

.neurite-variable {
  color: var(--cm-variable-color);
}

.neurite-variable-2 {
  color: var(--cm-variable-color);
}

.neurite-variable-3 {
  color: var(--cm-variable-color);
}

.neurite-def {
  color: var(--cm-def-color);
}

.neurite-operator {
  color: var(--cm-operator-color);
}

.neurite-punctuation {
  color: var(--cm-punctuation-color);
}

.neurite-number {
  color: var(--cm-number-color);
}

.neurite-string,
.neurite-string-2 {
  color: var(--cm-string-color);
}

.neurite-comment {
  color: var(--cm-comment-color);
}

.neurite-atom {
  color: var(--cm-atom-color);
}

.neurite-type {
  color: var(--cm-type-color);
}

.neurite-qualifier {
  color: var(--cm-qualifier-color);
}

.neurite-tag {
  color: var(--cm-tag-color);
}

.neurite-tag.bracket {
  color: var(--cm-bracket-color);
}

.neurite-attribute {
  color: var(--cm-attribute-color);
}

.neurite-meta {
  color: var(--cm-meta-color);
}

.neurite-property {
  color: var(--cm-property-color);
}

.neurite-header {
  color: var(--cm-header-color);
}

.neurite-quote {
  color: var(--cm-quote-color);
}

.neurite-link {
  color: var(--cm-link-color);
}

.neurite-error {
  color: var(--cm-error-color);
}

.neurite-bracket {
  color: var(--cm-bracket-color);
}


/*Hide codemirror node text*/
.hidden-text {
  display: none;
}

.current-node-section {
  color: #bbb;
}

.node-title {
  color: paleturquoise;
  cursor: pointer;
  text-decoration: underline;
}

.cm-node {
  color: #D15050;
  cursor: pointer;
}

.cm-ref {
  color: #4F8EB7;
}

.cm-Prompt {
  color: #E0B0FF;
  background-color: #464250;
  border-radius: 5px;
  padding: 2px;
}

.aiResponseEditor .CodeMirror-scroll {
  padding: 0 !important;
  background-color: #222226;
}

.model-dropdown {
  width: 123px;
}

.error-icon-css {
  display: inline-block;
  width: 20px;
  height: 20px;
  position: relative;
  text-align: center;
  margin: 3px;
}

.error-x-mark {
  position: relative;
  margin-top: 12px;
  z-index: 2;
}

.error-x-mark-left,
.error-x-mark-right {
  display: block;
  position: absolute;
  width: 21px;
  height: 2px;
  top: 50%;
  left: 50%;
  background-color: red;
}

.error-x-mark-left {
  transform: translate(-50%, -50%) rotate(45deg);
}

.error-x-mark-right {
  transform: translate(-50%, -50%) rotate(-45deg);
}

.loader-centered {}

.loader {
  border: 5px solid #222226;
  /* Dark grey */
  border-top: 5px solid #006BB6;
  /* Blue */
  border-radius: 50%;
  width: 15px;
  height: 15px;
  animation: spin 2s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes scaleDown {
  0% {
    transform: translate(-50%, -50%) scale(1);
  }

  100% {
    transform: translate(-50%, -50%) scale(0);
  }
}

.initial-animation {
  animation: scaleDown 8s forwards;
}

.loader-fillBackground {
  border: 5px solid #222226;
  /* Dark grey */
  border-top: 5px solid #006BB6;
  /* Blue */
  border-radius: 50%;
  width: 15px;
  height: 15px;
  position: relative;
  overflow: hidden;
  animation: spin 2s linear infinite;
}

.loader-fill {
  background-color: #006BB6;
  /* Blue */
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0);
  transition: transform 0.35s;
}

.status-icons-container {
  position: relative;
  width: 24px;
  /* Width of the icons */
  height: 24px;
  /* Height of the icons */
  margin-right: -30px;
  /* Space between icons and buttons */
  margin-left: 10px;
  pointer-events: none;
  /* Disables pointer events */
}

.color-picker-container {
  display: flex;
  justify-content: space-around;
}

.color-picker-item {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.color-picker-item input[type="color"] {
  background: #222226;
}

#bgpick {
  align-content: center;
}

.gridLayout {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 10px;
}

.ainodewrapperDiv {
  display: flex;
  flex-direction: column;
  height: 550px;
  width: 500px;
  position: relative;
}

.ai-response-div {
  flex-grow: 1;
  background: linear-gradient(to bottom, rgba(34, 34, 38, 0), #222226);
  color: inherit;
  border: none;
  border-color: #8882;
  width: 100%;
  overflow-y: auto;
  overflow-x: hidden;
  word-wrap: break-word;
  user-select: none;
  line-height: 1.75;
}

.prompt-container {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  position: relative;
  margin: 10px;
}

.button-container {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  margin-bottom: 12px;
  margin-top: 4px;
}

.ainode-settings-container {
  display: grid;
  position: absolute;
  /* Doesn't affect existing elements */
  z-index: 100;
  /* High z-index to overlay other elements */
  top: 70px;
  /* Slightly more distance from top than from sides */
  left: 50%;
  /* Center horizontally */
  transform: translateX(-50%);
  /* Adjust for perfect centering */
  width: 90%;
  height: 54%;
  background-color: rgba(0.2, 0.2, 0.2, 0.3);
  /* Transparent blurred dark greyscale */
  backdrop-filter: blur(10px);
  /* Blur effect */
  border-radius: 10px;
  /* Slightly rounded corners */
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
  /* Horizontal offset, Vertical offset, Blur, Color */

  grid-template-columns: repeat(3, 1fr);
  /* 3 columns */
  grid-template-rows: repeat(4, 1fr);
  /* 4 rows */
  grid-auto-flow: column;
  gap: 15px;
  /* Gap between each element */
  padding: 20px;
  /* Padding around the edges */
}

.settingsSlider {
  background-color: #222226;
  padding: 5px;
  border-radius: 5px;
  display: flex;
  flex-direction: column;
  justify-content: left;
  width: 90%;
}

.settingsSlider.centered {
  width: 256px;
  /* or whatever width you need */
  margin-left: auto;
  margin-right: auto;
}


/* Old Custom Instructions CSS*/
textarea[id^='custom-instructions-textarea-'] {
  position: absolute;
  margin: 10px;
  background-color: #222226;
  color: #bbb;
  padding: 10px;
  font-size: 14px;
  width: 55%;
  height: 50%;
  resize: none;
}

textarea[id^='custom-instructions-textarea-']:focus {
  outline: none;
  border: 1px solid #bbb;
  border-radius: 3px;
}

/* Custom instructions container */
.custom-instructions-container {
  grid-column: span 2;
  /* Span 2 columns in the grid */
  grid-row: span 3;
  /* Span 2 rows in the grid */
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
}

/* Prompt library button */
.prompt-library-button {
  align-self: flex-end;
  margin-bottom: 10px;
  padding: 5px 10px;
  background-color: #222226;
  border: 1px solid #444;
  border-radius: 4px;
  cursor: pointer;
  width: 100%;
}

.prompt-library-button:hover {
  background-color: #333;
}

/* Custom instructions textarea */
.custom-instructions-textarea {
  flex-grow: 1;
  background-color: #222226;
  color: #bbb;
  padding: 10px;
  font-size: 14px;
  resize: none;
  border: 1px solid #444;
  border-radius: 4px;
}

/* Prompt library modal */
.prompt-library-container {
  display: flex;
  width: 100%;
  height: 350px;
}

.prompt-list-container {
  width: 200px;
  display: flex;
  flex-direction: column;
  border-right: 1px solid #444;
}

.prompt-list {
  flex-grow: 1;
  max-width: 100%;
  overflow-y: auto;
  padding: 10px;
}

.prompt-list div {
  margin-bottom: 5px;
}

.prompt-list input {
  width: 90%;
  padding: 5px;
  background-color: #222226;
  color: #bbb;
  border: 1px solid #444;
  border-radius: 4px;
  transition: background-color 0.3s ease, border-color 0.3s ease;
}

.prompt-list input:focus {
  outline: none;
}

.prompt-list input:not(.selected):hover {
  background-color: #2a2a2e;
  border-color: #666;
}

.prompt-list input.selected,
.prompt-list input.selected:focus,
.prompt-list input.selected:hover {
  background-color: rgb(30, 55, 81);
  border-color: rgb(0, 107, 182);
}

.prompt-list-buttons {
  display: flex;
  justify-content: space-between;
  padding: 10px;
}

.add-prompt-button,
.delete-prompt-button {
  padding: 5px 10px;
  background-color: #222226;
  color: #bbb;
  border: 1px solid #444;
  border-radius: 4px;
  cursor: pointer;
}

.prompt-content {
  width: 70%;
  display: flex;
  flex-direction: column;
  padding: 10px;
}

.prompt-content-textarea {
  flex-grow: 1;
  margin-bottom: 10px;
  padding: 10px;
  background-color: #222226;
  color: #bbb;
  border: 1px solid #444;
  border-radius: 4px;
  resize: none;
}

.prompt-buttons {
  display: flex;
  justify-content: flex-end;
}

.set-instructions-button {
  padding: 5px 10px;
  background-color: #222226;
  border: 1px solid #444;
  border-radius: 4px;
  cursor: pointer;
  width: 100%;
}

/* Hover effects */
.prompt-list input:hover,
.prompt-list input:focus {
  background-color: #333;
}

.add-prompt-button:hover {
  background-color: #293e34;
}

.delete-prompt-button:hover {
  background-color: #9a4a4a;
}

.set-instructions-button:hover {
  background-color: rgb(30, 55, 81);
}

/* Remove default focus outline for all textareas */
textarea:focus {
  outline: none;
}


.code-block-container {
  width: 88%;
  /* Add width to the parent container */
  margin: auto;
}

.code-block-wrapper {
  display: flex;
  flex-direction: column-reverse;
  align-items: flex-start;
  justify-content: flex-start;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  padding: 0px;
  overflow-x: auto;
  overflow-y: hidden;
  width: 100%;
  /* Match the width with the label */
  background-color: #18181c;
  -webkit-box-shadow: 0px 0px 6.5px rgba(0, 0, 0, 0.5);
  -moz-box-shadow: 0px 0px 6.5px rgba(0, 0, 0, 0.5);
  box-shadow: 0px 0px 6.5px rgba(0, 0, 0, 0.5);
}

.language-label {
  font-size: 12px;
  background-color: black;
  color: #bbb;
  padding: 1px 5px;
  width: 100%;
  /* Match the width with the wrapper */
  text-align: left;
  box-sizing: border-box;
  cursor: grab;
  user-select: none;
}

.code-block {
  padding: 15px;
  margin-top: -5px;
  margin-bottom: 0px;
  box-sizing: border-box;
  color: #D4D4D4;
  overflow: hidden;
  /* Add horizontal scrollbar when content overflows */
  white-space: pre;
  /* Prevents the text from wrapping */
}


.code-block pre code {
  border-radius: 0;
  margin: 0;
  color: #D4D4D4;
}

.code-block-container.hovered {
  transform: scale(1.05);
  transform-origin: top center;
  transition: transform 0.3s ease;
}

code.language-markdown {
  white-space: break-spaces !important;
}

.user-prompt {
  background-color: rgb(22 20 22);
  font-size: 20px;
  padding: 10px 10px 10px 15px;
  border-radius: 20px 20px 0 20px;
  margin: 15px;
  display: inline-block;
  width: auto;
  max-width: 85%;
  -webkit-box-shadow: 0px 0px 20px 6.5px rgba(255, 255, 255, 0.05);
  -moz-box-shadow: 0px 0px 20px 6.5px rgba(255, 255, 255, 0.05);
  box-shadow: 0px 0px 20px 6.5px rgba(255, 255, 255, 0.05);
  cursor: grab;
  text-align: left;
}

.user-prompt:hover {
  transform: scale(1.02);
  /* increase size to 105% on hover */
  transition: transform 0.3s ease;
  /* animate the size increase smoothly */
}

.user-prompt.editing {
  transform: none;
  /* reset size */
}

.response-wrapper {
  display: flex;
  position: relative;
  align-items: flex-start;
  justify-content: flex-start;
  margin: 15px 0px 20px 20px;
  -webkit-box-shadow: 0px 0px 6.5px rgba(0, 0, 0, 0.4);
  -moz-box-shadow: 0px 0px 6.5px rgba(0, 0, 0, 0.4);
  box-shadow: 0px 0px 6.5px rgba(0, 0, 0, 0.4);
  max-width: 90%;
  width: fit-content;
  /* Add this */
}


.ai-response {
  align-self: flex-start;
  background-color: #212127;
  padding: 15px;
  padding-left: 25px;
  /* or any value you prefer */
  border-radius: 2px;
  margin: 0px 0px 0px 0px;
  display: inline-block;
  width: auto;
  overflow-wrap: break-word;
  position: relative;
  font-size: 22px;
}

/* Headings */
.ai-response h1 {
  font-size: 1.5em;
  color: #fff;
  margin-bottom: 0.5em;
}

.ai-response h2 {
  font-size: 1.25em;
  color: #eee;
  margin-bottom: 0.5em;
}

.ai-response h3 {
  font-size: 1.2em;
  color: #ddd;
  margin-bottom: 0.5em;
}

.ai-response h4 {
  font-size: 1.1em;
  color: #ccc;
  margin-bottom: 0.5em;
}

.ai-response h5 {
  font-size: 1.1em;
  color: #bbb;
  margin-bottom: 0.5em;
}

.ai-response h6 {
  font-size: 1em;
  color: #aaa;
  margin-bottom: 0.5em;
}

/* Paragraphs */
.ai-response p {
  margin-bottom: 1em;
}

/* Lists */
.ai-response ul,
.ai-response ol {
  margin-bottom: 1em;
  padding-left: 2em;
}

.ai-response li {
  margin-bottom: 0.5em;
}

/* Links */
.ai-response a {
  color: #8ac6f2;
  text-decoration: none;
}

.ai-response a:hover {
  text-decoration: underline;
}

/* Images */
.ai-response img {
  display: block;
  margin: 0 auto;
  width: 80%;
  max-width: 100%;
  /* Ensure the image doesn't exceed the container's width */
}

/* Tables */
.ai-response table {
  width: 100%;
  margin: 0 auto;
  border-collapse: collapse;
  /* Optional: To make sure there are no spaces between table cells */
  table-layout: fixed;
  /* Ensure consistent column widths */
}

.ai-response th,
.ai-response td {
  padding: 0.5em;
  border: 1px solid #ddd;
  /* Optional: To add a border to the table cells */
  text-align: left;
  /* Optional: To align text to the left in table cells */
}

/* Ensure consistent row height */
.ai-response tr {
  height: 2em;
  /* Adjust the value as needed */
}

.drag-handle {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 10px;
  height: 100%;
  cursor: grab;
  position: absolute;
  left: -4px;
  z-index: 1;
  background-color: #3e364a;
}

.drag-handle .dot {
  width: 4px;
  height: 4px;
  background-color: #222226;
  border-radius: 50%;
  margin: 2px 0;
}



.response-wrapper.hovered {
  transform: scale(1.05);
  transform-origin: left center;
  transition: transform 0.3s ease;
}

.custom-textarea {
  background-color: #222226;
  color: inherit;
  border: inset;
  border-color: #8882;
  width: 100%;
  height: 70px;
  overflow-y: hidden;
  padding: 10px;
  box-sizing: border-box;
  resize: none;
  user-select: none;
}

.custom-textarea:focus {
  outline: none;
  border: 1px solid #9d9d9d;
  border-radius: 3px;
}

.copy-btn {
  /* your default styles here */
  padding: 1px 4px;
  background: none;
  color: #888888;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  /* smooth transition */
  user-select: none;
}

.copy-btn:hover {
  /* styles for when the mouse is hovering over the button */
  background-color: #18181c;
}

.copy-btn:active {
  /* styles for when the button is being clicked */
  background-color: black;
}

.code-button {
  background-color: #222226;
  color: #bbb;
  border: none;
  padding: 5px 10px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 10px;
  margin: 2px 2px;
  cursor: pointer;
  transition-duration: 0.4s;
}

.code-button:hover {
  background-color: #ddd;
  color: #222226;
}

/*Node Panel*/
.node-panel {
  position: fixed;
  left: 0;
  top: 0;
  width: auto;
  height: auto;
  background: #1a1921bf;
  backdrop-filter: blur(6px);
  display: flex;
  /* Change to flex for initial layout */
  padding-left: 5px;
  padding-right: 5px;
  padding-top: 20px;
  padding-bottom: 5px;
  flex-direction: column;
  align-items: center;
  border-bottom-right-radius: 8px;
  border-top-left-radius: 8px;
  z-index: 100;
  transform: translateX(-200%);
  /* Start off-screen to the left */
  transition: transform 0.3s ease;
  /* Transition for sliding effect */
  overflow: hidden;
  /* Hide overflow */
  /*-webkit-box-shadow: 0px 0px 30px 10px rgba(21, 21, 27, 0.44);
    -moz-box-shadow: 0px 0px 30px 10px rgba(21, 21, 27, 0.44);
    box-shadow: 0px 0px 30px 10px rgba(21, 21, 27, 0.44);*/
  margin-top: 10px;
  margin-left: 12px;
}

.node-panel.open {
  transform: translateX(0%);
  /* Slide in to view */
  width: fit-content;
  /* Adjust width to fit the content */
}

.icon-row {
  display: flex;
  flex-direction: row;
  margin-bottom: 10px;
  width: 100%;
  justify-content: space-evenly;
}

.function-call-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 300px;
}



.node-panel .neurite-function-cm-style {
  background-color: transparent;
  max-height: 300px;
  /* Maximum height */
  height: 300px;
  padding: 10px;
  /* Add any other styles you need */
}

.function-prompt-wrapper {
  /* Style the wrapper as per your requirements */
  padding: 10px;
  margin: 0px;
  color: white;
  /* Example text color */
  border-top: 1px solid #131313;
  /* Example border */
  border-bottom: 1px solid #131313;
  /* Example border */
  height: fit-content;
  width: 100%;
}

.context-settings-panel {
  display: flex;
  flex-direction: column;
  /* Align children vertically */
  align-items: center;
  /* Center-align the children */
  transition: height 0.2s ease;
  height: 0;
  /* Start with 0 height for the initial state if hidden */
  width: 100%;
  /* Ensure the panel takes full width */
}

.context-settings-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  overflow: hidden;
}

.model-select-panel {
  display: flex;
  transition: height 0.2s ease;
  height: 0;
  flex-direction: column;
  align-items: flex-end;
}

.model-select-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}

.fractal-settings-panel {
  display: flex;
  transition: height 0.2s ease;
  height: 0;
  flex-direction: column;
  overflow: hidden;
}

.fractal-settings-container {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
}

.color-settings-panel {
  display: flex;
  transition: height 0.2s ease;
  height: 0;
  flex-direction: column;
  overflow: hidden;
}

.color-settings-container {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
}


.toggle-panel {
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: space-between;
  /* Distribute children evenly */
  margin-top: 0px;
  margin-bottom: 0px;
  width: 100%;
  height: 10px;
  padding: 0 10px;
  /* Add padding to space out the items */
}

.icon-wrapper {
  flex-grow: 0;
  /* Prevent growing to keep icon centered */
  display: flex;
  align-items: center;
  justify-content: center;
}

.toggle-icon {
  display: inline-block;
  fill: #555;
  transition: transform 0.5s ease, fill 0.3s ease;
  width: 13px;
  height: 20px;
}

/* Styles for .bar */
.bar {
  flex-grow: 1;
  /* Allow bars to take up available space */
  max-width: 20%;
  height: 2px;
  background-color: #8882;
  /* Default color */
  align-self: center;
  /* Vertically align with the icon */
  transition: background-color 0.3s ease;
  /* Smooth transition for background color */
}

/* Hover effect for .toggle-panel affecting .toggle-icon and bars */
.panel-open+.toggle-panel .icon-wrapper .toggle-icon {
  transform: scaleY(-1);
}

.toggle-panel:hover .toggle-icon svg path {
  stroke: RGB(200, 200, 255);
}

.toggle-panel:hover .toggle-icon {
  transform: scale(1.1);
  /* Increase size slightly */
}

.toggle-panel:hover .bar {
  background-color: #555;
  /* Change color on hover */
}

/* Styles for .button-label */
.button-label {
  display: flex;
  align-items: center;
  justify-content: center;
  /* Ensure the text remains centered */
  cursor: pointer;
  text-align: center;
  text-decoration: none;
  /* In case you apply this class to <a> tags */
  gap: 8px;
  /* Space between bars and the label text */
}

.button-label:hover::before,
.button-label:hover::after {
  background-color: #555;
  /* Change color on hover for bars and pseudo-elements */
}

.button-label::before,
.button-label::after {
  content: '';
  /* Necessary for displaying the pseudo-element */
  background-color: #8882;
  height: 2px;
  /* Thickness of the bar, matching .bar */
  flex-grow: 1;
  /* Allow bars to take up available space on either side */
  transition: background-color 0.3s ease;
  /* Smooth transition for background color, matching .bar */
}

/* Unified hover effects specifically targeting background color changes */
.label-bar-container:hover .bar,
.label-bar-container:hover .button-label::before,
.label-bar-container:hover .button-label::after {
  background-color: #555;
  /* Change color on hover for bars and pseudo-elements */
}

.label-bar-container:hover .button-label,
.div-bar-container:hover>div:first-child {
  color: #bbb;
  /* Adjust for visibility on dark background for label */
}


.function-call-panel {
  margin-top: 5px;
  margin-bottom: 5px;
  transition: all 0.3s ease;
  overflow-y: auto;
  max-height: fit-content;
  /* Adjust as needed */
  /* background: rgba(42, 42, 54, 0.2);  Example background */
  width: 100%;
  /* Match the width of the function call container */
  overflow: hidden;
  height: 0px;
  display: block;
  padding: 0;
  /* Reset any padding */
}


.function-call-panel.hidden {
  margin-top: 0;
  /* Eliminate margin when hidden */
  margin-bottom: 0;
  /* Eliminate margin when hidden */
}

.function-call-list {
  height: 150px;
  max-height: 150px;
  overflow-y: auto;
  overflow-x: hidden;
  /* direction: rtl; /* Right-to-left to move scrollbar to the left */
}


/* Example style for function call list items */
.function-call-list>div {
  padding: 5px;
  padding-left: 13px;
  margin: 10px;
  border-left: 1px solid RGB(200, 200, 255);
  background-color: #222226;
  color: #8a8a8d;
  display: block;
  /* Change to block to stack elements vertically */
  word-wrap: break-word;
  /* Ensure text wraps and doesn't overflow */
}

.func-error-icon {
  margin-right: 10px;
  /* Add space between the icon and the text */
  margin-left: -2px;
  vertical-align: middle;
  /* Vertically align the icon */
  stroke: #87253e;
}

.function-call-list>div.hover-state {
  background-color: #404052;
  /* Light grey background on hover */
  cursor: pointer;
}

.function-call-list>div.active-state {
  background-color: #17171a;
  /* Slightly darker grey for active state */
  color: RGB(200, 200, 255);
}

.function-call-list>div.error-item {
  background-color: #44000069;
  color: #8c7474;
  border-left: 1px solid #aa1111;
}

.function-call-list>div.error-item:hover {
  background-color: #603030;
  /* Warmer, lighter red for hover */
}

.function-call-list>div.error-item.active-state {
  background-color: #1a0606;
  /* Darker, more intense red for active state */
  color: #9f7777;
}

.error-log {
  color: #922b47 !important;
}


.function-prompt-textarea {
  overflow-y: hidden;
  flex-grow: 1;
  background-color: #222226;
  color: #bbb;
  border: inset;
  border-color: #8882;
  width: 100%;
  padding: 10px;
  box-sizing: border-box;
  resize: none;
}

.function-button {
  z-index: 1;
  padding: 4px 4px;
  font-size: 14px;
  cursor: pointer;
  background-color: #222226;
  color: white;
  border: inset;
  border-color: #8882;
  transition: background-color 0.3s, color 0.3s;
}

#function-run-button:hover {
  background-color: #58271c;
  color: #222226;
}

#function-send-button:hover {
  background-color: #293e34;
  /* Different color for send button */
  color: #222226;
}

#function-regen-button:hover {
  background-color: #333;
  /* Light grey for regen button */
}



.cm-neurite-function-name {
  color: #8e8eff !important;
}

.icon-content {
  flex-grow: 1;
  flex-shrink: 0;
  width: 10px;
  height: 30px;
  margin-inline: 5px;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 15%;
}


.panel-icon {
  width: 100%;
  height: 100%;
  user-select: none;
  -webkit-user-select: none;
  /* Safari */
  -moz-user-select: none;
  /* Firefox */
  -ms-user-select: none;
  /* IE/Edge */
  background-color: #222226;
  border-radius: 15%;
  padding: 8px;
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-shadow: 0px 0px 30px 10px rgba(21, 21, 27, 0.1);
  -moz-box-shadow: 0px 0px 30px 10px rgba(21, 21, 27, 0.1);
  box-shadow: 0px 0px 30px 10px rgba(21, 21, 27, 0.1);
  transition: background-color 0.3s, color 0.3s;
}

.panel-icon:hover {
  background-color: #ddd;
  color: #222226;
  cursor: grab;
}

/* Change cursor for draggable icons */
.panel-icon[data-draggable="true"]:hover {
  cursor: grab;
}

.panel-icon[data-draggable="true"]:active {
  cursor: grabbing;
}

/* Assuming you might have an active state for the icon in the future */
.panel-icon.activeIcon {
  background-color: #929292;
  cursor: grab;
}

.panel-icon.edges-active {
  background-color: #929292;
}

.panel-icon.edges-icon:hover {
  cursor: pointer;
  /* button click event cursor */
}

.icon-content .panel-icon svg {
  width: 100%;
  height: 100%;
  display: block;
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
}

#customContextMenu {
  border: 1px solid #eaeaea1a;
  background: rgb(0 0 0 / 50%);
  /* White background with transparency */
  backdrop-filter: blur(7px);
  /* Frosted glass effect */
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  /* Subtle shadow for depth */
  padding: 0px;
  /* Padding around the menu */
  z-index: 1000;
  /* High z-index to overlay other elements */
  position: absolute;
  /* Required for positioning */
  display: none;
  /* Initially hidden */
  border-radius: 0 10px 0 10px;
  /* Rounded corners as specified */
  overflow: hidden;
  /* Ensures content doesn't overflow */
}

#customContextMenu,
.suggestions-container {
  user-select: none;
  /* Disable text selection */
}


/* Hover effect for list items */
#customContextMenu li:hover {
  background-color: rgb(150 193 255 / 59%);
  /* Blue background on hover */
  color: black;
  /* White text on hover */
  text-shadow: none;
}

/* Remove border from the last item */
#customContextMenu li:last-child {
  border-bottom: none;
}

#customContextMenu li {
  list-style: none;
  /* Removes default list styling */
  padding: 0;
  /* Reduced padding for list items */
  cursor: pointer;
  /* Changes cursor to pointer on hover */
  border-bottom: 1px solid #eaeaea1a;
  /* Border between items */
  min-height: 36px;
  /* Minimum height for each item */
  display: flex;
  /* Flex layout to align items */
  align-items: center;
  /* Center items vertically */
}

/* Specific style for non-input list items */
#customContextMenu li:not(.input-item) {
  padding: 2px 12px;
  /* Left padding for non-input items */
}

#customContextMenu .custom-node-method-input {
  border: none;
  /* Consistent border */
  background-color: transparent;
  color: #888;
  /* Text color to match the theme */
  padding: 8px 10px;
  /* Padding similar to other menu items */
  margin: 0;
  /* Removing extra margin */
  width: fit-content;
  /* Full width */
  box-sizing: border-box;
  /* Include padding and border in width */
  outline: none;
  /* Removing outline */
  font-size: 16px;
  /* Font size to match the theme */
  transition: border-color 0.3s;
  /* Smooth transition for border color */
  cursor: text;
  /* Cursor indication for text input */
  flex-grow: 1;
  /* Let the input expand to fill the space */
}

/* Hover effect to match other menu items */
#customContextMenu .custom-node-method-input:hover {
  background-color: rgb(143 146 223 / 40%);
  color: black;
}

#customContextMenu .custom-node-method-input:hover::placeholder {
  color: #333;
  /* Darker grey placeholder text color on hover */
}

.suggestions-container {
  position: absolute;
  background: rgb(205 207 243 / 19%);
  backdrop-filter: blur(17px);
  max-height: 250px;
  /* Maximum height before scrolling */
  overflow-y: auto;
  /* Enables vertical scroll */
  scrollbar-width: none;
  /* Hides the scrollbar for Firefox */
  -ms-overflow-style: none;
  /* Hides the scrollbar for IE/Edge */
  z-index: 10;
  display: none;
  /* Start with the container hidden */
  border-radius: 10px 10px 0 10px;
}

.suggestions-container::-webkit-scrollbar {
  display: none;
  /* Hides the scrollbar for WebKit browsers */
}

.suggestions-container div {
  display: flex;
  /* Use flexbox for alignment */
  align-items: center;
  /* Vertically center items */
  justify-content: space-between;
  /* Space between text and button */
  padding: 8px;
  cursor: pointer;
  color: #aaa;
}

.suggestions-container div:hover {
  background-color: rgb(143 146 223 / 40%);
  color: white;
}

.suggestion-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  /* This ensures vertical center alignment */
  padding: 8px;
}

.suggestion-item span {
  flex-grow: 1;
  /* Allows the text to take up available space */
  /* Optional: Set line-height if needed to match the height of the pin button */
}

.pin-button {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0 8px;
  /* Adjust padding as needed */
  display: flex;
  /* Use flexbox for the button itself */
  align-items: center;
  /* Center align items inside the button */
  justify-content: center;
  /* Center content horizontally */
  transition: transform 0.2s ease;
  /* Smooth transition for size */
}

.pin-button svg {
  height: 1em;
  /* Adjust size as needed */
  width: 1em;
  /* Adjust size as needed */
}

.pin-button:hover {
  transform: scale(1.4);
  /* Scale up on hover */
}



.rettam-metadata {
  background-color: #f0f0f0;
  padding: 10px;
  margin-top: 10px;
  border-radius: 5px;
  font-size: 0.9em;
}

.rettam-metadata div {
  margin-bottom: 5px;
}